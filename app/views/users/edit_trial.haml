.container-fluid
  %h2 Zuch #{@trial.user.full_name} próba na #{@trial.user.stars + 1} gwiazdkę
  .row
    .col-md-4
      %h2 
        Wymagania
      -@trial.rank.rank_requirements.order(id: :asc).each do |rr|
        .sidebar
          .col-sm-2.col-xs-1{class: "bgn-#{rr.color}"}
          .col-sm-10.drop{id: "rank_requirement_id_#{rr.id}"}
            =label_tag rr, rr.description, id: rr.id, class: 'item-draggable'
            =form_for(rr, url: update_badges_path(rr)) do |f|
              =hidden_field :rank_requirement, :id, :value => rr.id
              =f.submit "Aktualizuj"
              %br/
              %b Odznaki
              - rr.badges.each do |badge|
                .form-group
                  .col-sm-8
                    =f.label badge.name, class: "control-label", id: "label_#{badge.id}"
                  .col-sm-3
                    =hidden_field_tag "rank_requirement[badge_ids][]", ''
                  .col-xs-1.flt-rght{class: "bgn-#{badge.color}"}
                  .fa.fa-trash-o.submit_on_click
                    =check_box("rank_requirement", "badge_ids", {:multiple => true, checked: true}, badge.id, nil)
              %b Zadania ind.
              - rr.custom_tasks.each do |custom_task|
                .form-group
                  .col-sm-8
                    = f.label custom_task.name
    .col-md-8
      .sidebar
        =form_for(@trial, url: update_trial_path(@trial), format: :json) do |f|
          =hidden_field :trial, :id, :value => @trial.id
          .col-md-5
            %h3 Zadania indywidualne
            #task_accordion.panel-group{"aria-multiselectable" => "true", :role => "tablist"}
              %li.list-group-item
                = f.nested_fields_for :custom_tasks do |ff|
                  %a{"aria-controls" => "task_#{ff.object.id}", "aria-expanded" => "true", "data-parent" => "#task_accordion", "data-toggle" => "collapse", :href => "#task_#{ff.object.id}", :role => "button"}
                    = "#{ff.object.name.present? ? ff.object.name : ''} - Rozwiń"
                  .panel-collapse.collapse{"aria-labelledby" => "#{ff.object.id}", :role => "tabpanel", id: "task_#{ff.object.id}"}
                    .panel-body
                      .droppable-container
                        .custom_task_container
                          = ff.label 'Nazwa*'
                          = ff.text_field :name, class: 'form-control'
                          = ff.label 'Wymagania spełniane przez to zadanie: (przeciągnij i upuść wymagania na to pole)'
                          - ff.object.rank_requirements.each do |b|
                            .col-sm-12
                              .fa.fa-trash-o.submit_on_click.rank_requirement_submit
                                =ff.check_box(:rank_requirement_ids, {:multiple => true, checked: true, class: "col-sm-2"}, b.id, nil)
                              .col-sm-8
                                ="#{b.description}"
                              .col-xs-1.flt-rght{class: "bgn-#{b.color}"}
                          %button#save.save_form Zapisz
                      = ff.remove_nested_fields_link 'Usuń zadanie'
            = f.add_nested_fields_link :custom_tasks, 'Dodaj zadanie indywidualne'
        .col-md-5
          .sidebar
            %h3 Odznaki
            / =collection_check_boxes(:trial, :badge_ids, Badge.all, :id, :name)
            -@badges.each do |badge|
              .item-draggable
                .form-group
                  .col-sm-8
                    =link_to badge.name, '#', class: "control-label", data: {toggle: "collapse", target: "#badge_#{badge.id}"},  id: "label_#{badge.id}"
                    .col-xs-12.collapse{id: "badge_#{badge.id}"}
                      -badge.badge_requirements.reverse.each do |br|
                        %p= br.description
                  .col-sm-3
                    =hidden_field_tag "rank_requirement[badge_ids][]", badge.id, multiple: true
                    .col-xs-1.flt-rght{class: "bgn-#{badge.color}"}
        .col-md-2
          =link_to 'Zapisz próbę', manage_trial_path, class: 'btn btn-success'

:javascript
  
  $(document).ready(function(){
    $("[id*='rank_requirement_id']").droppable({
        hoverClass: "drop-hover",
        drop: function(event, ui) {
          if( $(this).prev()[0].classList[0] !== ui.helper[0].firstElementChild.children[1].children[1].classList[0])
          {
            var r = confirm("Przydzielasz odznakę do wymagania o innym kolorze! Kontynuować?");
              if (r == true) {
                  $(this).children('form').append(ui.helper);
              } else {
                  return false;
              }
          }
          else{
            $(this).children('form').append(ui.helper);
          }
          $(this).find('form').submit();
        }
      });

    $('.droppable-container').droppable({
      hoverClass: "drop-hover",
      drop: function(event, ui) {
        element = [ui.helper[0].id, ui.helper.text()];
        var id = $(this).find('.form-control').attr('name')
        id = id.slice(0, id.indexOf("name"));
        var checkbox = document.createElement('input');
        checkbox.type = "checkbox";
        checkbox.name = id + 'rank_requirement_ids][]';
        checkbox.value = element[0];
        checkbox.id = id + 'badge_id_' + element[0];
        checkbox.checked = 'checked'
        var label = document.createElement('label')
        label.htmlFor = element[0];
        label.appendChild(document.createTextNode(element[1]));

        container = $(this).find('.custom_task_container').last();
        container.append("<div class='lol'></div>")
        container = $(this).find('.lol').last();
        container.append(checkbox);
        container.append(label);
        $(this).find('button')[0].click();
      }
    });


    $(document).on("fields_added.nested_form_fields", function(event, param){
      $('.droppable-container').last().droppable({
        hoverClass: 'drop-hover',
        drop: function(event, ui) {
          element = [ui.helper[0].id, ui.helper.text()];
          var id = $(this).find('.form-control').attr('name')
          id = id.slice(0, id.indexOf("name"));
          var checkbox = document.createElement('input');
          checkbox.type = "checkbox";
          checkbox.name = id + 'rank_requirement_ids][]';
          checkbox.value = element[0];
          checkbox.id = id + 'badge_id_' + element[0];
          checkbox.checked = 'checked'
          var label = document.createElement('label')
          label.htmlFor = element[0];
          label.appendChild(document.createTextNode(element[1]));

          container = $(this).find('.custom_task_container').last();
          container.append("<div class='lol'></div>")
          container = $(this).find('.lol').last();
          container.append(checkbox);
          container.append(label);
          $(this).find('button')[0].click();
        }
      });
      $('.rank_requirement_submit').click(function(){
        $(this).parent().parent().parent().find('.save_form').click();       
      });
    });


    $(".item-draggable").draggable({
      revert: true,
      zIndex: 50000
    });

    $('.submit_on_click').click(function(){
      checkbox = $(this).children()[0];
      checkbox.removeAttribute('checked');
      $(this).parent().parent().submit();
    });
    $('.rank_requirement_submit').click(function(){
      $(this).parent().parent().parent().find('.save_form').click();
    });

  });

  // $(document).ready(function(){
  //   $("[id*='rank_requirement_id']").click(function(){
  //     $('.marked').parent().parent().children().appendTo($($(this).parent().children("[id*='edit_rank_requirement']")));
  //     $('.marked').removeClass('marked');
  //     if( $(this).parent().children("[id*='edit_rank_requirement']").length > 0 )
  //       {
  //         $(this).parent().children("[id*='edit_rank_requirement']").submit();
  //       }
  //   });

  //   $("[id*='rank_requirement_badge']").click(function(){
  //     if( $(this).hasClass('marked') ) {
  //       $(this).removeClass('marked');
  //     }
  //     else{
  //       $(this).addClass('marked');
  //     }
  //   });

  // });
